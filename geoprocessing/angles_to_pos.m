% NOTE: function from ESP3 (Yoann). Not used in CoFFee but could be useful for future refactoring
function [Along_pos,Across_pos,z]=angles_to_pos_vec(Range,AcrossAngle,AlongAngle,...
    Heave,Roll,Pitch,Yaw,...    
    RollOffset,...
    PitchOffset,...
    YawOffset,...
    AlongOffset,...
    AcrossOffset,...
    Zoffset, ...
    roll_comp_bool, ...
    pitch_comp_bool, ...
    yaw_comp_bool, ...
    heave_comp_bool)
    
    attitude_mat = double(create_attitude_matrix(shiftdim(AcrossAngle,-2),shiftdim(AlongAngle,-2),zeros(1,1,numel(Range))));
    
    pos_in_trans_right = pagemtimes(attitude_mat,[zeros(1,1,numel(Range));zeros(1,1,numel(Range));shiftdim(Range,-2)]);
    
    attitude_mat_3 = double(create_attitude_matrix(shiftdim(Roll*roll_comp_bool+RollOffset,-2),shiftdim(Pitch*pitch_comp_bool+PitchOffset,-2),shiftdim(Yaw*yaw_comp_bool+YawOffset,-2)));
    
    attitude_mat_3_trans = double(create_attitude_matrix(shiftdim(Roll,-2),shiftdim(Pitch,-2),shiftdim(Yaw,-2)));
    
    pos_mat = pagemtimes(attitude_mat_3,(pos_in_trans_right)) ...
    + pagemtimes(attitude_mat_3_trans,double([AlongOffset;AcrossOffset;Zoffset])) ...
    + double([zeros(1,1,numel(Range));zeros(1,1,numel(Range));shiftdim(Heave*heave_comp_bool,-2)]);
    
    Along_pos = pos_mat(1,:)';
    Across_pos = pos_mat(2,:)';
    z = pos_mat(3,:)';
    
    function attitude_mat=create_attitude_matrix(Roll,Pitch,Yaw) 
    % Yaw(isnan(Yaw))=0;
    % Roll(isnan(Roll))=0;
    % Pitch(isnan(Pitch))=0;
    %
    % roll_mat=[[1 0 0 ];...
    % [0 cosd(Roll) -sind(Roll)];...
    % [0 sind(Roll) cosd(Roll)]];
    %
    % pitch_mat= [[ cosd(Pitch) 0 sind(Pitch)];....
    % [ 0 1 0 ];....
    % [-sind(Pitch) 0 cosd(Pitch)]];
    %
    % yaw_mat=[[ cosd(Yaw) -sind(Yaw) 0];....
    % [sind(Yaw) cosd(Yaw) 0];...
    % [ 0 0 1]];
    %
    % attitude_mat=roll_mat*pitch_mat*yaw_mat;
    
    % [gpu_comp,~]=get_gpu_comp_stat();
    gpu_comp = false;
    if gpu_comp    
        Roll = gpuArray(Roll);
        Pitch = gpuArray(Pitch);
        Yaw = gpuArray(Yaw);
    end
    
    attitude_mat = [...
    [cosd(Pitch).*cosd(Yaw) -cosd(Pitch).*sind(Yaw) sind(Pitch)];...
    [cosd(Roll).*sind(Yaw)+cosd(Yaw).*sind(Pitch).*sind(Roll) cosd(Roll).*cosd(Yaw)-sind(Pitch).*sind(Roll).*sind(Yaw) -cosd(Pitch).*sind(Roll)];...
    [sind(Roll).*sind(Yaw)-cosd(Yaw).*sind(Pitch).*cosd(Roll) sind(Roll).*cosd(Yaw)+sind(Pitch).*cosd(Roll).*sind(Yaw) cosd(Pitch).*cosd(Roll)]...
    ];
    
    if gpu_comp    
        attitude_mat = gather(attitude_mat);
    end
    
    end
end